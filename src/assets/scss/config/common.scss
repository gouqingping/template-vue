@charset 'utf-8';

.e {
    &-drag {
        -webkit-app-region: drag;
    }

    &-noneuse-select {
        -moz-user-select: none;
        /* Firefox私有属性 */
        -webkit-user-select: none;
        /* WebKit内核私有属性 */
        -ms-user-select: none;
        /* IE私有属性(IE10及以后) */
        -khtml-user-select: none;
        /* KHTML内核私有属性 */
        -o-user-select: none;
        /* Opera私有属性 */
        user-select: none;
        /* CSS3属性 */
    }

    &-space {
        width: 100%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    &-hover {
        color: var(--default-active-color);
    }

    &-image {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;

        img {
            height: auto;
        }
    }

    &-title {
        color: var(--default-font-color);
        font-size: var(--default-title-size);
    }

    &-flex {
        display: flex;
    }

    &-content {
        text-align: center;
        align-items: center;
        justify-content: center;
    }

    &-left {
        text-align: left;
        justify-content: left;
        align-items: flex-start;
    }

    &-right {
        text-align: right;
        justify-content: right;
        align-items: flex-end;
    }
}

$TYPE_THEME: ((className: success, backgroundColor: #67C23A),
    (className: warning, backgroundColor: #E6A23C),
    (className: info, backgroundColor: #909399),
    (className: error, backgroundColor: #F56C6C));

@for $i from 1 through length($TYPE_THEME) {
    $item: nth($TYPE_THEME, $i);

    .el-color-#{map-get($item, className)} {
        color: map-get($item, backgroundColor);
    }

    .el-bg-#{map-get($item, className)} {
        color: white;
        background-color: map-get($item, backgroundColor);
    }
}
